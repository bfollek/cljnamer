(ns cljnamer.main
  (:require ["package:flutter/material.dart" :as m]
            ["package:english_words/english_words.dart" :as ew]
            ["dart:core" :as dart]
            [cljd.flutter :as f]))

(defonce app-state (atom {:current (.random ew/WordPair)
                          :debug false
                          :favorites #{}}))

(defn debug-print
  [msg]
  (when (:debug @app-state) (dart/print msg)))

(defn favorites-button
  [current favorites]
  (f/widget
   (m/ElevatedButton
    .onPressed
    ;; Slick swap code from https://github.com/Tensegritics/ClojureDart/blob/main/samples/first_flutter_app_codelabs/src/sample/first_flutter_app_codelabs.cljd#L39C31-L39C31
    (fn [] (do
             (swap! app-state update :favorites #((if (% current) disj conj) % current))
             (debug-print (str "Changed favorites to " (:favorites @app-state))))))
   .child
   (m/Text "Favorites")))

(def next-button
  (f/widget
   (m/ElevatedButton
    .onPressed
    #(do
       (swap! app-state assoc :current (.random ew/WordPair))
       (debug-print (str "Changed current to " (:current @app-state))))
    .child
    (m/Text "Next"))))

(defn big-card
  [^ew/WordPair pair]
  [pair]
  (f/widget
   :context ctx
   :let [theme (m/Theme.of ctx)
         display-medium (-> theme .-textTheme .-displayMedium)
         color-primary (-> theme .-colorScheme .-primary)
         color-good-on-primary (-> theme .-colorScheme .-onPrimary)
         style (.copyWith display-medium .color color-good-on-primary)]
   (m/Card
    .color color-primary
    .child
    (m/Padding
     .padding (m/EdgeInsets.all 20)
     .child   (m/Text (.-asLowerCase pair)
                      .style style
                      .semanticsLabel (str (.-first pair) (.-second pair)))))))

(def my-home-page
  (f/widget
   :watch [{:keys [current favorites]} app-state]
   (m/Scaffold
    .body
    (m/Center
     .child
     (m/Column
      .mainAxisAlignment m/MainAxisAlignment.center
      .children [(big-card current)
                 (m/SizedBox .height 10)
                 (m/Row
                  .mainAxisSize m/MainAxisSize.min
                  .children
                  [next-button
                   (favorites-button current favorites)])])))))

(defn main []
  (f/run
   :let [app
         (m/MaterialApp
          .title "ClojureDot Namer App"
          .theme (m/ThemeData
                  .useMaterial3 true
                  .colorScheme (m/ColorScheme.fromSeed .seedColor m/Colors.deepOrange))
          .home my-home-page)]
   (do
     (swap! app-state assoc :debug (.-debugShowCheckedModeBanner app))
     (dart/print (str "debug is " (:debug @app-state) "."))
     app)))
